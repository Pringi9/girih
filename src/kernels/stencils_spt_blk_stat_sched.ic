void TEMPLATE(stat_sched,FUNC_NAME) KERNEL_SIG{

  int i,j,k, jb, je;
  int nny =shape[1];
  int nnx =shape[0];
  unsigned long ln_domain = shape[0]*shape[1]*shape[2];

  for(jb=yb; jb<ye; jb+=stencil_ctx.bs_y) // blocking in Y
  {
    je = (jb+stencil_ctx.bs_y)<(ye)?(jb+stencil_ctx.bs_y):(ye);
#pragma omp parallel num_threads(stencil_ctx.thread_group_size)
    {

#pragma omp for private(k,j,i) schedule(static)
      for(k=zb; k<ze; k++) {
        for(j=jb; j<je; j++) {
#pragma simd
          for(i=xb; i<xe; i++) {
            FUNC_BODY()
          }
        }
      }

    }
  }
}
